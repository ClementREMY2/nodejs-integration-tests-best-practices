name: Node.js CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Read .nvmrc
      run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      id: nvm

    - name: Use Node.js (.nvmrc)
      uses: actions/setup-node@v2
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"

    - name: Create Docker Compose Installer Script
      run: echo "sudo apt-get update && sudo apt-get install -y docker-compose" > install-docker-compose.sh

    - name: Upload Docker Compose Installer Artifact
      uses: actions/upload-artifact@v3
      with:
        name: docker-compose-installer
        path: install-docker-compose.sh

    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.npm
          node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - run: npm ci

  tests:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Download Docker Compose Installer Artifact
      uses: actions/download-artifact@v3
      with:
        name: docker-compose-installer

    - name: Install Docker Compose
      run: bash install-docker-compose.sh

    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.npm
          node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - run: npm test
    - run: npm run test:nestjs
    - run: npm run test:mocha
